/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AttachmentUpdateManyWithoutRoutesInput } from "./AttachmentUpdateManyWithoutRoutesInput";
import { ValidateNested, IsOptional, IsString } from "class-validator";
import { Type } from "class-transformer";
import { MessageUpdateManyWithoutRoutesInput } from "./MessageUpdateManyWithoutRoutesInput";
import { UserUpdateManyWithoutRoutesInput } from "./UserUpdateManyWithoutRoutesInput";
@InputType()
class RouteUpdateInput {
  @ApiProperty({
    required: false,
    type: () => AttachmentUpdateManyWithoutRoutesInput,
  })
  @ValidateNested()
  @Type(() => AttachmentUpdateManyWithoutRoutesInput)
  @IsOptional()
  @Field(() => AttachmentUpdateManyWithoutRoutesInput, {
    nullable: true,
  })
  attachments?: AttachmentUpdateManyWithoutRoutesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  did?: string;

  @ApiProperty({
    required: false,
    type: () => MessageUpdateManyWithoutRoutesInput,
  })
  @ValidateNested()
  @Type(() => MessageUpdateManyWithoutRoutesInput)
  @IsOptional()
  @Field(() => MessageUpdateManyWithoutRoutesInput, {
    nullable: true,
  })
  messages?: MessageUpdateManyWithoutRoutesInput;

  @ApiProperty({
    required: false,
    type: () => UserUpdateManyWithoutRoutesInput,
  })
  @ValidateNested()
  @Type(() => UserUpdateManyWithoutRoutesInput)
  @IsOptional()
  @Field(() => UserUpdateManyWithoutRoutesInput, {
    nullable: true,
  })
  users?: UserUpdateManyWithoutRoutesInput;
}
export { RouteUpdateInput };
