/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { Attachment } from "../../attachment/base/Attachment";
import {
  ValidateNested,
  IsOptional,
  IsString,
  IsDate,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { EnumMessageFolder } from "./EnumMessageFolder";
import { Route } from "../../route/base/Route";
@ObjectType()
class Message {
  @ApiProperty({
    required: false,
    type: () => [Attachment],
  })
  @ValidateNested()
  @Type(() => Attachment)
  @IsOptional()
  attachments?: Array<Attachment>;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  body!: string | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
    enum: EnumMessageFolder,
  })
  @IsEnum(EnumMessageFolder)
  @Field(() => EnumMessageFolder, {
    nullable: true,
  })
  folder?: "Inbox" | "Outbox";

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  party!: string;

  @ApiProperty({
    required: true,
    type: () => Route,
  })
  @ValidateNested()
  @Type(() => Route)
  route?: Route;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}
export { Message };
