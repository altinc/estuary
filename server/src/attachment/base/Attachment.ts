/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsJSON,
  IsDate,
  IsEnum,
  IsString,
  ValidateNested,
} from "class-validator";
import { GraphQLJSONObject } from "graphql-type-json";
import { JsonValue } from "type-fest";
import { Type } from "class-transformer";
import { EnumAttachmentFolder } from "./EnumAttachmentFolder";
import { Message } from "../../message/base/Message";
import { Route } from "../../route/base/Route";
@ObjectType()
class Attachment {
  @ApiProperty({
    required: true,
  })
  @IsJSON()
  @Field(() => GraphQLJSONObject)
  body!: JsonValue;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
    enum: EnumAttachmentFolder,
  })
  @IsEnum(EnumAttachmentFolder)
  @Field(() => EnumAttachmentFolder, {
    nullable: true,
  })
  folder?: "Inbox" | "Outbox";

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
    type: () => Message,
  })
  @ValidateNested()
  @Type(() => Message)
  message?: Message;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  party!: string;

  @ApiProperty({
    required: true,
    type: () => Route,
  })
  @ValidateNested()
  @Type(() => Route)
  route?: Route;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}
export { Attachment };
