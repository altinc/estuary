datasource postgres {
  provider = "postgresql"
  url      = env("POSTGRESQL_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  createdAt DateTime @default(now())
  device    Device?  @relation(fields: [deviceId], references: [id])
  deviceId  String?
  firstName String?
  id        String   @id @default(cuid())
  lastName  String?
  password  String
  roles     String[]
  route     Route?   @relation(fields: [routeId], references: [id])
  routeId   String?
  updatedAt DateTime @updatedAt
  username  String   @unique
}

model Device {
  appId       String   @unique
  createdAt   DateTime @default(now())
  deviceToken String   @unique
  id          String   @id @default(cuid())
  selector    String   @unique
  updatedAt   DateTime @updatedAt
  user        User[]
}

model Route {
  attachments Attachment[]
  createdAt   DateTime     @default(now())
  did         String       @unique
  id          String       @id @default(cuid())
  messages    Message[]
  updatedAt   DateTime     @updatedAt
  users       User[]
}

model Message {
  attachments Attachment[]
  body        String?
  createdAt   DateTime          @default(now())
  folder      EnumMessageFolder
  id          String            @id @default(cuid())
  party       String
  route       Route             @relation(fields: [routeId], references: [id])
  routeId     String
  updatedAt   DateTime          @updatedAt
}

model Attachment {
  body      Json
  createdAt DateTime             @default(now())
  folder    EnumAttachmentFolder
  id        String               @id @default(cuid())
  message   Message              @relation(fields: [messageId], references: [id])
  messageId String
  party     String
  route     Route                @relation(fields: [routeId], references: [id])
  routeId   String
  updatedAt DateTime             @updatedAt
}

enum EnumMessageFolder {
  Inbox
  Outbox
}

enum EnumAttachmentFolder {
  Inbox
  Outbox
}